Object Oriented Programming :

It is an approach that provides a way of modularizing programming, that which 
can be used to create small partition memory area, for both data and objects, 
which are to be used as templates for creating copies of such modules on demand. 

Object : An object is real world entity, that which possess 3 characterstics known as

	   (i) State

	  (ii) Behaviour

	 (iii) Identity

OOPS features : 
_______________


(i) Encapsulation : Wrapping up of data and functions into a single unit known as encapsulation.

(ii) Abstraction  : Hiding the irrelevant details of an object, that do not contribute to its essential characterstics known as abstraction.

(iii) Inheritance : Deriving an new entity from already existing entity known as inheritance, through inheritance we can reduce the size 
			of the program. 

(iv) Polymorphism : The ability to take more than one form known as polymorphism.


class : A class is a template or blueprint, that which contains combination of data members and member functions. Members of the class can be accessable by using instance of the class. 

class class_name
{
    data members;
    member functions;
}

_________________________________________________________________________________________________

Modules refer to a file that contains python code. 

A file containing python code, stored with extension .py
Modules are used to break down large programs into small manageable and organized files.
Modules provide reusability of code. 
The modules can be imported into multiple files. 



def show(name):
   print(name)

show()
show("Jash")
show("Nandini","Mithun")

In python, we can pass n number of arguments to a method known as varargs

Means, variable-length arguemnets in python can be specified in 2 ways as

*args
*kwargs

*args 

   Arguments that can take an unspecified amount of input
   It stores data in list format
   
   def show(*name):
     ...
   
then the above all statements will work

Python can accept multiple keyword arguments known as **kwargs, means we can pass different data types to the function parameters. 

def args_demo(**kwargs):
    print(kwargs)

args_demo(eid=100,ename="sam",salary=84234.22)

You can define a class as

class class_name:

You can define a method in class, by using def keyword 

class Demo:
    def show(self):

--> self used to represent the instance of the class, 
--> With this keyword attributes and methods of the class can be accessable
--> It binds the attributes with the given arguments

You can access members of the class, by using object name. 

demo=Demo()

means demo is an object of Demo class. 

Access Modifiers : 
___________________

python provides basically 3 access modifiers known as

(i) private : Allows you to access members within current class. A private variable will be prefixed with (__) double underscore

(ii) public : Allows you to access members in entire application.  By default python members are public

(iii) protected : Allows you to access members within current/derived class.  To make an instance of protected it must be (_) single underscore









